#+startup:indent
* molecule.el
** English
*** About
Molecule is a testing framework for ansible roles. If you don't know what it is, you should probably learn about it on [[https://readthedocs.org/projects/molecule/][their site]] and then come back here. Molecule.el is a simple wrapper around molecule. Right now, it allows you to create roles and scenarios and execute all commands except =login=.

*** Requirements

#+BEGIN_SRC bash
sudo pip3 install molecule docker-py
#+END_SRC

*** Install
You can install from Melpa for a stable release or from the git repository, which may be experimental.

#+BEGIN_SRC bash
git clone https://git.daemons.it/drymer/molecule.el ~/.emacs.d/lisp/molecule.el
#+END_SRC

[[http://melpa.org/#/molecule][file:http://melpa.org/packages/molecule-badge.svg]]

*** Configuration
A minimal configuration would be this.

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/lisp/molecule.el/")
(require 'molecule)
#+END_SRC

For a more advanced configuration check the next chapter.
*** Advanced usage
**** Main commands:
- =molecule-init=: Initialize a new role or scenario.

- =molecule-check=: Use the provisioner to perform a Dry-Run...

- =molecule-converge=: Use the provisioner to configure instances...

- =molecule-create=: Start instances.

- =molecule-dependency=: Mange the role's dependencies.

- =molecule-destroy=: Destroy instances.

- =molecule-idempotence=:  Use the provisioner to configure the...

- =molecule-lint=: Lint the role.

- =molecule-list=: Lists status of instances.

- =molecule-syntax=: Use the provisioner to syntax check the role.

- =molecule-side-effect=: Use the provisioner to perform side-effects...

- =molecule-test=: Test (destroy, create, converge, lint,...

- =molecule-verify=: Run automated tests against instances.

**** Variables:
- =molecule-command=: It uses molecule in the path by default.

- =molecule-debug=: If set to =t=, it will pass the =--debug= flag to molecule. Set to nil by default.

*** License
#+BEGIN_SRC text
Author:: drymer <drymer [ AT ] autistici.org>
Copyright:: Copyright (c) 2017, drymer

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#+END_SRC
*** Bugs, patches and feature requests
If you find a bug, have a patch or have a feature request, you may send an e-mail to the address in the previous section or go to [[https://git.daemons.it/drymer/molecule.el/][https://git.daemons.it/drymer/molecule.el/]]
** Castellano
*** Acerca de
Molecule es un framework de testeo de roles de ansible. Si no sabes que es, probablemente debas aprender sobre ello en [[https://readthedocs.org/projects/molecule/][su página]] y luego volver. Molecule.el es un wrapper simple alrededor de molecule. Ahora mismo, permite crear roles y escenarios y ejecutar todas las órdenes excepto =login=.

*** Requisitos

#+BEGIN_SRC bash
sudo pip install molecule docker-py
#+END_SRC

*** Instalar
Se puede instalar desde Melpa para tener una versión estable o desde el repositorio git, que puede ser inestable.

#+BEGIN_SRC bash
git clone https://git.daemons.it/drymer/molecule.el ~/.emacs.d/lisp/molecule.el/
#+END_SRC

[[http://melpa.org/#/nikola][file:http://melpa.org/packages/molecule-badge.svg]]

*** Configuración
Una configuración minimalista sería la siguiente.

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/lisp/molecule.el/")
(require 'molecule)
#+END_SRC

Para una configuración más avanzada se puede consultar la sección siguiente.
*** Uso avanzado
**** Comandos principales:
- =molecule-init=: Inicializa un nuevo rol o escenario.

- =molecule-check=: Usa el provisionador para realizar una ejecución simulada...

- =molecule-converge=: Usr el provisionador para configurar instancias...

- =molecule-create=: Empezar instancias.

- =molecule-dependency=: Manejar las dependencias del rol.

- =molecule-destroy=: Destruir instancias.

- =molecule-idempotence=: Usa el provisionador para configurarlo...

- =molecule-lint=: Pasarle el lint al role.

- =molecule-list=: Lista los estados de las instancias.

- =molecule-syntax=: Usa el provisionador para hacer un checkeo de sintaxis del role.

- =molecule-side-effect=: Usa el provisionado para ejecutar posibles efectos secundarios.

- =molecule-test=: Test (destroy, create, converge, lint,...

- =molecule-verify=: Ejecuta tests automatizados contra algunas instancias.

**** Variables:
- =molecule-command=: Usa molecule en el path por defecto.

- =molecule-debug=: Si se establece en =t=, se pasará el parámetro =--debug= a molecule. Establecido en nil por defecto.

*** Licencia
#+BEGIN_SRC text
Autor:: drymer <drymer [EN] autistici.org>
Derechos de autor:: Copyright (c) 2017, drymer

Este programa es software libre: puedes redistribuirlo y/o modificarlo
bajo los términos de la Licencia Pública General GNU publicada por
la Free Software Foundation, ya sea la versión 2 de la Licencia, o
su opción) cualquier versión posterior.
Este programa se distribuye con la esperanza de que sea útil, pero
SIN NINGUNA GARANTÍA; Sin la garantía implícita de
COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO PARTICULAR. Vea el GNU
Licencia Pública General para más detalles.

Debería haber recibido una copia de la GNU General Public License
junto con este programa. Si no es así, consulte <http://www.gnu.org/licenses/>.
#+END_SRC
*** Bugs, parches y solicitudes de características
Si encuentras un error, tienes un parche o tienes la solicitud de una característica, puedes enviar un correo electrónico a la dirección de la sección anterior o ir a [[https://git.daemons.it/drymer/nikola.el][https://git.daemons.it/drymer/molecule.el]].
